declare name "Faust SEAM main lib";
declare version "0.2";
declare author "Giuseppe Silvi";
declare author "Davide Tedesco";
declare license "CC3";

// calling standard faust libraries
import("stdfaust.lib");
/*
// ## SEAM LIBS
// ### standard faust lib extensions
import("seam.basic.lib");
import("seam.math.lib");
import("seam.filters.lib");
import("seam.reverbs.lib");

// ### michael gerzon and general ambisonic teory
import("seam.gerzon.lib");
import("seam.ambisonic.lib");

// ### stereophony and perception
import("seam.stereophony.lib");
import("seam.hrtf.lib");

// ### CSound and MaxMsp object cloning
import("seam.csound.lib");
import("seam.cyclone.lib");

// ### author specific literature
import("seam.nono.lib");
import("seam.nottoli.lib");

// ### live electronics stuff
import("seam.gui.lib");
import("seam.hardware.lib");
import("seam.analyzers.lib");
import("seam.mixer.lib");

// ### instrument specific literature
import("seam.vcs3.lib");
*/
// ### standard faust lib extensions
san = library("seam.analyzers.lib");
sba = library("seam.basic.lib");
sma = library("seam.math.lib");
sfi = library("seam.filters.lib");
sre = library("seam.reverbs.lib");

// ### michael gerzon and general ambisonic teory
smg = library("seam.gerzon.lib");
sam = library("seam.ambisonic.lib");

// ### stereophony and perception
sst = library("seam.stereophony.lib");
shr = library("seam.hrtf.lib");

// ### CSound and MaxMsp object cloning
scs = library("seam.csound.lib");
scy = library("seam.cyclone.lib");

// ### author specific literature
sln = library("seam.nono.lib");
sgn = library("seam.nottoli.lib");
sds = library("seam.discipio.lib");

// ### live electronics stuff
sgu = library("seam.gui.lib");
shw = library("seam.hardware.lib");
smx = library("seam.mixer.lib");

// ### instrument specific literature
svc = library("seam.vcs3.lib");

als = library("allseam.lib");
